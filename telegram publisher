from MyMQTT import *
import time
import json
class Ledswitch:
	def __init__(self, clientID, topic,broker,port):
		self.client = MyMQTT(self.deviceId, self.conf["broker"], int(self.conf["port"]), self)
		self.lightTopic = self.conf["lightTopic"]
		self.switchTopic = self.conf["switchTopic"]
		self.__message={'device': deviceID,'n':'switch','value':None, 'timestamp':'','unit':"bool"}
		self.lightstatus={"on":1,"off":0}
		self.workingStatus = "on"

	def start(self):
		self.client.start()
		self.client.myPublish(self.switchTopic)
		self.client.myPublish(self.lightTopic)

	def stop(self):
		self.client.stop()

	def notify(self, topic, msg):
		data = json.loads(msg)
		if topic == self.switchTopic:
			print(json.dumps(data))
			self.workingStatus = "on"
		elif topic == self.lightTopic:
			lightstatus = int(data["lightstatus"])
			self.setLightStatus(lightstatus)


if __name__ == "__main__":
	conf=json.load(open("settings.json"))
	broker=conf["broker"]
	port=conf["port"]
	Ledswitch = Ledswitch("Ledswitch","Museum/led",broker,port)
	Ledswitch.client.start()

	print('The administrator wants to switch on/off the lamp\n')
	done=False
	command_list='Type:\n"on" to set the light on\n"off" to set it off\n"q" to quit\n'
	while not done:
		print(command_list)
		user_input=input()
		if user_input=="on" or user_input=="off":
			Ledswitch.publish(user_input)
		elif user_input=='q':
			done=True
		else:
			print('Unknown command')
	Ledswitch.client.stop()
